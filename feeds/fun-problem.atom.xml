<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lisha Li's Blog</title><link href="http://lisafly.github.io/" rel="alternate"></link><link href="http://lisafly.github.io/feeds/fun-problem.atom.xml" rel="self"></link><id>http://lisafly.github.io/</id><updated>2013-11-17T15:14:27-08:00</updated><entry><title>Calculate Covariance Between Multinomial Categories by Hand</title><link href="http://lisafly.github.io/blog/calculate-covariance-between-multinomial-categories-by-hand/" rel="alternate"></link><updated>2013-11-17T15:14:27-08:00</updated><author><name>Chuanlong (Ben) Du</name></author><id>tag:lisafly.github.io,2013-11-17:blog/calculate-covariance-between-multinomial-categories-by-hand/</id><summary type="html">&lt;p&gt;Let $(X_1, \ldots, X_k)\sim\text{Multinomial}(n, p_1, \ldots, p_k)$. 
I'll show how to calculate $Cov(X_i, X_j), i\ne j$. 
The main purpose of doing this is to illustrate the little trick 
of reducing complexity of problems by decomposing a complicated random variable 
into simple ones. &lt;/p&gt;
&lt;p&gt;Let $(Y_{i1}, \ldots, Y_{ik})\overset{iid}{\sim}\text{Multinomial}(1, p_1, \ldots, p_k), i\ge1$,
then 
$$
X_j = \sum_{i=1}^n Y_{ij}, 1\le j \le k.
$$
So,
\begin{align}
Cov(X_i,X_j) &amp;amp;= Cov(\sum_{l=1}^n Y_{li}, \sum_{m=1}^n Y_{mj})\nonumber\newline
             &amp;amp;= \sum_{l=1}^n\sum_{m=1}^n Cov(Y_{li}, Y_{mj})\nonumber\newline
             &amp;amp;= \sum_{m=1}^n Cov(Y_{mi}, Y_{mj})\nonumber\newline
             &amp;amp;= nCov(Y_{1i}, Y_{1j}) = n(EY_{1i}Y_{1j} - EY_{1i}EY_{1j})\nonumber\newline
             &amp;amp;= -np_ip_j\nonumber\newline
\end{align}&lt;/p&gt;</summary><category term="fun problem"></category><category term="statistics"></category><category term="probability"></category><category term="multinomial"></category><category term="covariance"></category></entry></feed>